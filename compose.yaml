services:

  database:
    image: mysql:latest
    container_name: database
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: clustersim
    ports:
      - "3306:3306"
    networks:
      - clustersim

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin-clustersim
    environment:
      PMA_HOST: database
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "80:80"
    networks:
      - clustersim
    depends_on:
      - database

  eurekaServer:
    image: eclipse-temurin:21-jre
    container_name: eureka-server
    volumes:
      - ./EurekaServer/target/EurekaServer-0.0.1-SNAPSHOT.war:/app.war
    working_dir: /app
    command: ["java", "-jar", "/app.war"]
    ports:
      - "8761:8761"
    networks:
      - clustersim

  rabbitmq:
    image: rabbitmq:management
    ports:
      - "5672:5672" # Porta per AMQP
      - "15672:15672" # Porta per l'interfaccia web di RabbitMQ
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - clustersim

  requestHandlerProxy:
    image: eclipse-temurin:21-jre # Usa una base con Java 21
    volumes:
      - ./RequestHandlerProxy/target/RequestHandlerProxy-0.0.1-SNAPSHOT.war:/app.war
    working_dir: /app
    command: ["java", "-jar", "/app.war"]
    networks:
      - clustersim
    ports:
      - "8080:8080" # Mappa la porta interna 8080 del container alla porta 8080 dell'host
    depends_on:
      - eurekaServer

  authenticationMicroservice:
    image: eclipse-temurin:21-jre # Usa una base con Java 21
    volumes:
      - ./AuthenticationMicroservice/target/AuthenticationMicroservice-0.0.1-SNAPSHOT.war:/app.war
    working_dir: /app
    command: ["java", "-jar", "/app.war"]
    networks:
      - clustersim
    depends_on:
      - eurekaServer
    deploy:
      replicas: 2  # Numero di repliche
      restart_policy:
        condition: on-failure

networks:
  clustersim:
    name: clustersim
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

# docker-compose up
# oppure in modalit√† detatched per non bloccare il terminale
# docker-compose up -d